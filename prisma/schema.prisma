// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid())
  nome  String
  email String @unique
  senha String
  foto  String

  posts Post[]

  comentarios Comment[]

  likes Like[]

  @@map("users")
}

model Post {
  id       String   @id @default(uuid())
  titulo   String
  conteudo String
  data     DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  comentarios Comment[]

  like Like[]

  deleted_at DateTime?

  @@map("posts")
}

model Comment {
  id       String   @id @default(uuid())
  conteudo String
  data     DateTime @default(now())

  Post   Post   @relation(fields: [postId], references: [id])
  postId String

  like Like[]

  User   User   @relation(fields: [userId], references: [id])
  userId String

  deleted_at DateTime?

  @@map("comments")
}

model Like {
  id   String   @id @default(uuid())
  data DateTime @default(now())

  Post   Post?   @relation(fields: [postId], references: [id])
  postId String?

  Comment   Comment? @relation(fields: [commentId], references: [id])
  commentId String?

  User   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("likes")
}